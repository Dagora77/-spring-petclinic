#!groovy

pipeline {
    agent any
    options {
        ansiColor('xterm')
    }
    stages {
        stage('clone code') {
            steps {
               git branch: 'main', credentialsId: 'my-github', url: 'git@github.com:Dagora77/-spring-petclinic.git' 
            }
        }
        stage('build') {
            steps {
                sh './mvnw package'
            }
        }
        stage('create image') {
            steps {
                sh './mvnw spring-boot:build-image'
            }
        }
        stage('push to artifactory storage') {
            steps {
                sh 'docker tag spring-petclinic:2.6.0-SNAPSHOT 10.0.10.184:5000/${APP_NAME}:${BUILD_NUMBER}'
                sh 'docker push 10.0.10.184:5000/${APP_NAME}:${BUILD_NUMBER}'
            }
        }
        stage('deploy to server by ansible playbook'){
             steps{
                ansiblePlaybook become: true, colorized: true, disableHostKeyChecking: true, credentialsId: 'ansible-servers', installation: 'ansible', inventory: 'hosts', playbook: 'deploy-playbook.yml'
             }
        }
    }
  }
